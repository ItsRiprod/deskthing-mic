name: Publish package, create Release and attach daemon artifacts

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.set_job_outputs.outputs.release_upload_url }}
      assets_json: ${{ steps.set_job_outputs.outputs.assets_json }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install dependencies
        run: npm ci

      - name: Sanitize token and configure npm auth
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then echo "NODE_AUTH_TOKEN is not set" && exit 1; fi
          # remove CR characters that may come from Windows clipboard
          sanitized=$(printf '%s' "$NODE_AUTH_TOKEN" | tr -d '\r')
          # write auth token to npm config (safer than raw file write)
          npm config set //registry.npmjs.org/:_authToken "${sanitized}"
          echo "token-length: $(printf '%s' "${sanitized}" | wc -c)"

      - name: Verify npm token (whoami)
        run: |
          echo "Running npm whoami to verify the token maps to the expected npm account"
          npm whoami
      - name: Publish to npm
        run: |
          echo "Publishing package to npm"
          npm publish --access public

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deskthing-${{matrix.os}}
          path: |
            ${{ github.workspace }}/dist/lib/deskthing-daemon            